/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2025-05-22 12:10:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.app.entity.Book;
import com.app.dao.BookDAO;

public final class updateBook_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.app.dao.BookDAO");
    _jspx_imports_classes.add("com.app.entity.Book");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Update Book</title>\r\n");
      out.write("<style>\r\n");
      out.write("    body {\r\n");
      out.write("        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n");
      out.write("        background-color: #f4f6f9;\r\n");
      out.write("        padding: 40px;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    h1, h2 {\r\n");
      out.write("        color: #333;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    input[type=\"text\"] {\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        width: 250px;\r\n");
      out.write("        border: 1px solid #ccc;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        margin: 10px 0;\r\n");
      out.write("        font-size: 16px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    input[type=\"submit\"] {\r\n");
      out.write("        padding: 10px 20px;\r\n");
      out.write("        background-color: #007bff;\r\n");
      out.write("        color: white;\r\n");
      out.write("        border: none;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        font-size: 16px;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        margin-top: 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    input[type=\"submit\"]:hover {\r\n");
      out.write("        background-color: #0056b3;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    form {\r\n");
      out.write("        margin-bottom: 30px;\r\n");
      out.write("        display: inline-block;\r\n");
      out.write("        background-color: #ffffff;\r\n");
      out.write("        padding: 30px;\r\n");
      out.write("        border-radius: 10px;\r\n");
      out.write("        box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n");
      out.write("        text-align: left;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .message {\r\n");
      out.write("        margin-top: 20px;\r\n");
      out.write("        color: red;\r\n");
      out.write("        font-size: 18px;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<h1>Update Book Information</h1>\r\n");
      out.write("\r\n");
      out.write("<form action=\"updateBook.jsp\">\r\n");
      out.write("    <label for=\"txtid\"><strong>Book ID:</strong></label><br>\r\n");
      out.write("    <input type=\"text\" name=\"txtid\" id=\"txtid\" placeholder=\"Enter Book ID to update\"><br>\r\n");
      out.write("    <input type=\"submit\" value=\"Fetch Book\">\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");

    String bid = request.getParameter("txtid");

    if (bid != null && !bid.trim().isEmpty()) {
        try {
            int id = Integer.parseInt(bid);
            BookDAO bd = new BookDAO();
            Book b = bd.getBook(id);

            if (b != null) {

      out.write("\r\n");
      out.write("<form action=\"addUpdate.jsp\">\r\n");
      out.write("    <h2>Book Details:</h2>\r\n");
      out.write("    <label>Book ID:</label><br>\r\n");
      out.write("    <input type=\"text\" name=\"id\" value=\"");
      out.print( b.getId() );
      out.write("\" readonly><br>\r\n");
      out.write("\r\n");
      out.write("    <label>Title:</label><br>\r\n");
      out.write("    <input type=\"text\" name=\"titel\" value=\"");
      out.print( b.getTitel() );
      out.write("\"><br>\r\n");
      out.write("\r\n");
      out.write("    <label>Author:</label><br>\r\n");
      out.write("    <input type=\"text\" name=\"aurthor\" value=\"");
      out.print( b.getAurthor() );
      out.write("\"><br>\r\n");
      out.write("\r\n");
      out.write("    <label>Publisher:</label><br>\r\n");
      out.write("    <input type=\"text\" name=\"publisher\" value=\"");
      out.print( b.getPublisher() );
      out.write("\"><br>\r\n");
      out.write("\r\n");
      out.write("    <label>Price:</label><br>\r\n");
      out.write("    <input type=\"text\" name=\"price\" value=\"");
      out.print( b.getPrice() );
      out.write("\"><br>\r\n");
      out.write("\r\n");
      out.write("    <input type=\"submit\" value=\"Update Book\">\r\n");
      out.write("</form>\r\n");

            } else {

      out.write("\r\n");
      out.write("<div class=\"message\">No book found with the given ID.</div>\r\n");

            }
        } catch (NumberFormatException e) {

      out.write("\r\n");
      out.write("<div class=\"message\">Invalid Book ID format. Please enter a valid number.</div>\r\n");

        }
    } else if (bid != null) {

      out.write("\r\n");
      out.write("<div class=\"message\">Book ID is required.</div>\r\n");

    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
